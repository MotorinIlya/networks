// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: snakes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Snakes {

  /// <summary>Holder for reflection information generated from snakes.proto</summary>
  public static partial class SnakesReflection {

    #region Descriptor
    /// <summary>File descriptor for snakes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SnakesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzbmFrZXMucHJvdG8SBnNuYWtlcyKgAQoKR2FtZVBsYXllchIMCgRuYW1l",
            "GAEgAigJEgoKAmlkGAIgAigFEhIKCmlwX2FkZHJlc3MYAyABKAkSDAoEcG9y",
            "dBgEIAEoBRIeCgRyb2xlGAUgAigOMhAuc25ha2VzLk5vZGVSb2xlEicKBHR5",
            "cGUYBiABKA4yEi5zbmFrZXMuUGxheWVyVHlwZToFSFVNQU4SDQoFc2NvcmUY",
            "ByACKAUiaQoKR2FtZUNvbmZpZxIRCgV3aWR0aBgBIAEoBToCNDASEgoGaGVp",
            "Z2h0GAIgASgFOgIzMBIWCgtmb29kX3N0YXRpYxgDIAEoBToBMRIcCg5zdGF0",
            "ZV9kZWxheV9tcxgFIAEoBToEMTAwMCIyCgtHYW1lUGxheWVycxIjCgdwbGF5",
            "ZXJzGAEgAygLMhIuc25ha2VzLkdhbWVQbGF5ZXIijAMKCUdhbWVTdGF0ZRIT",
            "CgtzdGF0ZV9vcmRlchgBIAIoBRInCgZzbmFrZXMYAiADKAsyFy5zbmFrZXMu",
            "R2FtZVN0YXRlLlNuYWtlEiYKBWZvb2RzGAMgAygLMhcuc25ha2VzLkdhbWVT",
            "dGF0ZS5Db29yZBIkCgdwbGF5ZXJzGAQgAigLMhMuc25ha2VzLkdhbWVQbGF5",
            "ZXJzGiMKBUNvb3JkEgwKAXgYASABKBE6ATASDAoBeRgCIAEoEToBMBrNAQoF",
            "U25ha2USEQoJcGxheWVyX2lkGAEgAigFEicKBnBvaW50cxgCIAMoCzIXLnNu",
            "YWtlcy5HYW1lU3RhdGUuQ29vcmQSOAoFc3RhdGUYAyACKA4yIi5zbmFrZXMu",
            "R2FtZVN0YXRlLlNuYWtlLlNuYWtlU3RhdGU6BUFMSVZFEikKDmhlYWRfZGly",
            "ZWN0aW9uGAQgAigOMhEuc25ha2VzLkRpcmVjdGlvbiIjCgpTbmFrZVN0YXRl",
            "EgkKBUFMSVZFEAASCgoGWk9NQklFEAEihwEKEEdhbWVBbm5vdW5jZW1lbnQS",
            "JAoHcGxheWVycxgBIAIoCzITLnNuYWtlcy5HYW1lUGxheWVycxIiCgZjb25m",
            "aWcYAiACKAsyEi5zbmFrZXMuR2FtZUNvbmZpZxIWCghjYW5fam9pbhgDIAEo",
            "CDoEdHJ1ZRIRCglnYW1lX25hbWUYBCACKAki3gcKC0dhbWVNZXNzYWdlEg8K",
            "B21zZ19zZXEYASACKAMSEQoJc2VuZGVyX2lkGAogASgFEhMKC3JlY2VpdmVy",
            "X2lkGAsgASgFEisKBHBpbmcYAiABKAsyGy5zbmFrZXMuR2FtZU1lc3NhZ2Uu",
            "UGluZ01zZ0gAEi0KBXN0ZWVyGAMgASgLMhwuc25ha2VzLkdhbWVNZXNzYWdl",
            "LlN0ZWVyTXNnSAASKQoDYWNrGAQgASgLMhouc25ha2VzLkdhbWVNZXNzYWdl",
            "LkFja01zZ0gAEi0KBXN0YXRlGAUgASgLMhwuc25ha2VzLkdhbWVNZXNzYWdl",
            "LlN0YXRlTXNnSAASOwoMYW5ub3VuY2VtZW50GAYgASgLMiMuc25ha2VzLkdh",
            "bWVNZXNzYWdlLkFubm91bmNlbWVudE1zZ0gAEisKBGpvaW4YByABKAsyGy5z",
            "bmFrZXMuR2FtZU1lc3NhZ2UuSm9pbk1zZ0gAEi0KBWVycm9yGAggASgLMhwu",
            "c25ha2VzLkdhbWVNZXNzYWdlLkVycm9yTXNnSAASOAoLcm9sZV9jaGFuZ2UY",
            "CSABKAsyIS5zbmFrZXMuR2FtZU1lc3NhZ2UuUm9sZUNoYW5nZU1zZ0gAEjMK",
            "CGRpc2NvdmVyGAwgASgLMh8uc25ha2VzLkdhbWVNZXNzYWdlLkRpc2NvdmVy",
            "TXNnSAAaCQoHUGluZ01zZxowCghTdGVlck1zZxIkCglkaXJlY3Rpb24YASAC",
            "KA4yES5zbmFrZXMuRGlyZWN0aW9uGggKBkFja01zZxosCghTdGF0ZU1zZxIg",
            "CgVzdGF0ZRgBIAIoCzIRLnNuYWtlcy5HYW1lU3RhdGUaOgoPQW5ub3VuY2Vt",
            "ZW50TXNnEicKBWdhbWVzGAEgAygLMhguc25ha2VzLkdhbWVBbm5vdW5jZW1l",
            "bnQaDQoLRGlzY292ZXJNc2caiwEKB0pvaW5Nc2cSLgoLcGxheWVyX3R5cGUY",
            "ASABKA4yEi5zbmFrZXMuUGxheWVyVHlwZToFSFVNQU4SEwoLcGxheWVyX25h",
            "bWUYAyACKAkSEQoJZ2FtZV9uYW1lGAQgAigJEigKDnJlcXVlc3RlZF9yb2xl",
            "GAUgAigOMhAuc25ha2VzLk5vZGVSb2xlGiEKCEVycm9yTXNnEhUKDWVycm9y",
            "X21lc3NhZ2UYASACKAkaXwoNUm9sZUNoYW5nZU1zZxIlCgtzZW5kZXJfcm9s",
            "ZRgBIAEoDjIQLnNuYWtlcy5Ob2RlUm9sZRInCg1yZWNlaXZlcl9yb2xlGAIg",
            "ASgOMhAuc25ha2VzLk5vZGVSb2xlQgYKBFR5cGUqOgoITm9kZVJvbGUSCgoG",
            "Tk9STUFMEAASCgoGTUFTVEVSEAESCgoGREVQVVRZEAISCgoGVklFV0VSEAMq",
            "IgoKUGxheWVyVHlwZRIJCgVIVU1BThAAEgkKBVJPQk9UEAEqMgoJRGlyZWN0",
            "aW9uEgYKAlVQEAESCAoERE9XThACEggKBExFRlQQAxIJCgVSSUdIVBAEQiYK",
            "F21lLmlwcG9saXRvdi5maXQuc25ha2VzQgtTbmFrZXNQcm90bw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Snakes.NodeRole), typeof(global::Snakes.PlayerType), typeof(global::Snakes.Direction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GamePlayer), global::Snakes.GamePlayer.Parser, new[]{ "Name", "Id", "IpAddress", "Port", "Role", "Type", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameConfig), global::Snakes.GameConfig.Parser, new[]{ "Width", "Height", "FoodStatic", "StateDelayMs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GamePlayers), global::Snakes.GamePlayers.Parser, new[]{ "Players" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameState), global::Snakes.GameState.Parser, new[]{ "StateOrder", "Snakes", "Foods", "Players" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameState.Types.Coord), global::Snakes.GameState.Types.Coord.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameState.Types.Snake), global::Snakes.GameState.Types.Snake.Parser, new[]{ "PlayerId", "Points", "State", "HeadDirection" }, null, new[]{ typeof(global::Snakes.GameState.Types.Snake.Types.SnakeState) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameAnnouncement), global::Snakes.GameAnnouncement.Parser, new[]{ "Players", "Config", "CanJoin", "GameName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage), global::Snakes.GameMessage.Parser, new[]{ "MsgSeq", "SenderId", "ReceiverId", "Ping", "Steer", "Ack", "State", "Announcement", "Join", "Error", "RoleChange", "Discover" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.PingMsg), global::Snakes.GameMessage.Types.PingMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.SteerMsg), global::Snakes.GameMessage.Types.SteerMsg.Parser, new[]{ "Direction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.AckMsg), global::Snakes.GameMessage.Types.AckMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.StateMsg), global::Snakes.GameMessage.Types.StateMsg.Parser, new[]{ "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.AnnouncementMsg), global::Snakes.GameMessage.Types.AnnouncementMsg.Parser, new[]{ "Games" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.DiscoverMsg), global::Snakes.GameMessage.Types.DiscoverMsg.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.JoinMsg), global::Snakes.GameMessage.Types.JoinMsg.Parser, new[]{ "PlayerType", "PlayerName", "GameName", "RequestedRole" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.ErrorMsg), global::Snakes.GameMessage.Types.ErrorMsg.Parser, new[]{ "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Snakes.GameMessage.Types.RoleChangeMsg), global::Snakes.GameMessage.Types.RoleChangeMsg.Parser, new[]{ "SenderRole", "ReceiverRole" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Роль узла в топологии связей узлов в пределах игры
  /// </summary>
  public enum NodeRole {
    /// <summary>
    /// Обычный узел, лист в топологии "звезда"
    /// </summary>
    [pbr::OriginalName("NORMAL")] Normal = 0,
    /// <summary>
    /// Главный узел, центр в топологии "звезда"
    /// </summary>
    [pbr::OriginalName("MASTER")] Master = 1,
    /// <summary>
    /// Заместитель главного узла
    /// </summary>
    [pbr::OriginalName("DEPUTY")] Deputy = 2,
    /// <summary>
    /// Наблюдатель, похож на NORMAL, но не имеет змеи в статусе ALIVE, только получает обновления статуса
    /// </summary>
    [pbr::OriginalName("VIEWER")] Viewer = 3,
  }

  /// <summary>
  /// Тип игрока
  /// </summary>
  public enum PlayerType {
    /// <summary>
    /// Живой пользователь
    /// </summary>
    [pbr::OriginalName("HUMAN")] Human = 0,
    /// <summary>
    /// Робот, управляет своей змеёй с помощью алгоритма (это не нужно реализовывать, но предусмотрено в протоколе на будущее)
    /// </summary>
    [pbr::OriginalName("ROBOT")] Robot = 1,
  }

  public enum Direction {
    /// <summary>
    /// Вверх (в отрицательном направлении оси y)
    /// </summary>
    [pbr::OriginalName("UP")] Up = 1,
    /// <summary>
    /// Вниз (в положительном направлении оси y)
    /// </summary>
    [pbr::OriginalName("DOWN")] Down = 2,
    /// <summary>
    /// Влево (в отрицательном направлении оси x)
    /// </summary>
    [pbr::OriginalName("LEFT")] Left = 3,
    /// <summary>
    /// Вправо (в положительном направлении оси x)
    /// </summary>
    [pbr::OriginalName("RIGHT")] Right = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Игрок
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GamePlayer : pb::IMessage<GamePlayer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GamePlayer> _parser = new pb::MessageParser<GamePlayer>(() => new GamePlayer());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GamePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayer(GamePlayer other) : this() {
      _hasBits0 = other._hasBits0;
      name_ = other.name_;
      id_ = other.id_;
      ipAddress_ = other.ipAddress_;
      port_ = other.port_;
      role_ = other.role_;
      type_ = other.type_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayer Clone() {
      return new GamePlayer(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private readonly static string NameDefaultValue = "";

    private string name_;
    /// <summary>
    /// Имя игрока (для отображения в интерфейсе)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_ ?? NameDefaultValue; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasName {
      get { return name_ != null; }
    }
    /// <summary>Clears the value of the "name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearName() {
      name_ = null;
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private readonly static int IdDefaultValue = 0;

    private int id_;
    /// <summary>
    /// Уникальный идентификатор игрока в пределах игры
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "ip_address" field.</summary>
    public const int IpAddressFieldNumber = 3;
    private readonly static string IpAddressDefaultValue = "";

    private string ipAddress_;
    /// <summary>
    /// IPv4 или IPv6 адрес игрока в виде строки. Отсутствует в описании игрока-отправителя сообщения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IpAddress {
      get { return ipAddress_ ?? IpAddressDefaultValue; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "ip_address" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIpAddress {
      get { return ipAddress_ != null; }
    }
    /// <summary>Clears the value of the "ip_address" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIpAddress() {
      ipAddress_ = null;
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private readonly static int PortDefaultValue = 0;

    private int port_;
    /// <summary>
    /// Порт UDP-сокета игрока. Отсутствует в описании игрока-отправителя сообщения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Port {
      get { if ((_hasBits0 & 2) != 0) { return port_; } else { return PortDefaultValue; } }
      set {
        _hasBits0 |= 2;
        port_ = value;
      }
    }
    /// <summary>Gets whether the "port" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasPort {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "port" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPort() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private readonly static global::Snakes.NodeRole RoleDefaultValue = global::Snakes.NodeRole.Normal;

    private global::Snakes.NodeRole role_;
    /// <summary>
    /// Роль узла в топологии
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.NodeRole Role {
      get { if ((_hasBits0 & 4) != 0) { return role_; } else { return RoleDefaultValue; } }
      set {
        _hasBits0 |= 4;
        role_ = value;
      }
    }
    /// <summary>Gets whether the "role" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRole {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "role" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRole() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private readonly static global::Snakes.PlayerType TypeDefaultValue = global::Snakes.PlayerType.Human;

    private global::Snakes.PlayerType type_;
    /// <summary>
    /// Тип игрока
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.PlayerType Type {
      get { if ((_hasBits0 & 8) != 0) { return type_; } else { return TypeDefaultValue; } }
      set {
        _hasBits0 |= 8;
        type_ = value;
      }
    }
    /// <summary>Gets whether the "type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasType {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 7;
    private readonly static int ScoreDefaultValue = 0;

    private int score_;
    /// <summary>
    /// Число очков, которые набрал игрок
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Score {
      get { if ((_hasBits0 & 16) != 0) { return score_; } else { return ScoreDefaultValue; } }
      set {
        _hasBits0 |= 16;
        score_ = value;
      }
    }
    /// <summary>Gets whether the "score" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasScore {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "score" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearScore() {
      _hasBits0 &= ~16;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GamePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GamePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      if (IpAddress != other.IpAddress) return false;
      if (Port != other.Port) return false;
      if (Role != other.Role) return false;
      if (Type != other.Type) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasName) hash ^= Name.GetHashCode();
      if (HasId) hash ^= Id.GetHashCode();
      if (HasIpAddress) hash ^= IpAddress.GetHashCode();
      if (HasPort) hash ^= Port.GetHashCode();
      if (HasRole) hash ^= Role.GetHashCode();
      if (HasType) hash ^= Type.GetHashCode();
      if (HasScore) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (HasIpAddress) {
        output.WriteRawTag(26);
        output.WriteString(IpAddress);
      }
      if (HasPort) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (HasRole) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (HasType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (HasScore) {
        output.WriteRawTag(56);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasName) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (HasId) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (HasIpAddress) {
        output.WriteRawTag(26);
        output.WriteString(IpAddress);
      }
      if (HasPort) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (HasRole) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (HasType) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      if (HasScore) {
        output.WriteRawTag(56);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (HasIpAddress) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (HasPort) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (HasRole) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (HasType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (HasScore) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GamePlayer other) {
      if (other == null) {
        return;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasIpAddress) {
        IpAddress = other.IpAddress;
      }
      if (other.HasPort) {
        Port = other.Port;
      }
      if (other.HasRole) {
        Role = other.Role;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasScore) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            IpAddress = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
          case 40: {
            Role = (global::Snakes.NodeRole) input.ReadEnum();
            break;
          }
          case 48: {
            Type = (global::Snakes.PlayerType) input.ReadEnum();
            break;
          }
          case 56: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            IpAddress = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
          case 40: {
            Role = (global::Snakes.NodeRole) input.ReadEnum();
            break;
          }
          case 48: {
            Type = (global::Snakes.PlayerType) input.ReadEnum();
            break;
          }
          case 56: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Параметры идущей игры (не должны меняться в процессе игры) 
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameConfig : pb::IMessage<GameConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameConfig> _parser = new pb::MessageParser<GameConfig>(() => new GameConfig());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameConfig(GameConfig other) : this() {
      _hasBits0 = other._hasBits0;
      width_ = other.width_;
      height_ = other.height_;
      foodStatic_ = other.foodStatic_;
      stateDelayMs_ = other.stateDelayMs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameConfig Clone() {
      return new GameConfig(this);
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 1;
    private readonly static int WidthDefaultValue = 40;

    private int width_;
    /// <summary>
    /// Ширина поля в клетках (от 10 до 100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Width {
      get { if ((_hasBits0 & 1) != 0) { return width_; } else { return WidthDefaultValue; } }
      set {
        _hasBits0 |= 1;
        width_ = value;
      }
    }
    /// <summary>Gets whether the "width" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWidth {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "width" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWidth() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 2;
    private readonly static int HeightDefaultValue = 30;

    private int height_;
    /// <summary>
    /// Высота поля в клетках (от 10 до 100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Height {
      get { if ((_hasBits0 & 2) != 0) { return height_; } else { return HeightDefaultValue; } }
      set {
        _hasBits0 |= 2;
        height_ = value;
      }
    }
    /// <summary>Gets whether the "height" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasHeight {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "height" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearHeight() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "food_static" field.</summary>
    public const int FoodStaticFieldNumber = 3;
    private readonly static int FoodStaticDefaultValue = 1;

    private int foodStatic_;
    /// <summary>
    /// Количество клеток с едой, независимо от числа игроков (от 0 до 100)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FoodStatic {
      get { if ((_hasBits0 & 4) != 0) { return foodStatic_; } else { return FoodStaticDefaultValue; } }
      set {
        _hasBits0 |= 4;
        foodStatic_ = value;
      }
    }
    /// <summary>Gets whether the "food_static" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFoodStatic {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "food_static" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFoodStatic() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "state_delay_ms" field.</summary>
    public const int StateDelayMsFieldNumber = 5;
    private readonly static int StateDelayMsDefaultValue = 1000;

    private int stateDelayMs_;
    /// <summary>
    /// Задержка между ходами (сменой состояний) в игре, в миллисекундах (от 100 до 3000)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StateDelayMs {
      get { if ((_hasBits0 & 8) != 0) { return stateDelayMs_; } else { return StateDelayMsDefaultValue; } }
      set {
        _hasBits0 |= 8;
        stateDelayMs_ = value;
      }
    }
    /// <summary>Gets whether the "state_delay_ms" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStateDelayMs {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "state_delay_ms" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStateDelayMs() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Width != other.Width) return false;
      if (Height != other.Height) return false;
      if (FoodStatic != other.FoodStatic) return false;
      if (StateDelayMs != other.StateDelayMs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasWidth) hash ^= Width.GetHashCode();
      if (HasHeight) hash ^= Height.GetHashCode();
      if (HasFoodStatic) hash ^= FoodStatic.GetHashCode();
      if (HasStateDelayMs) hash ^= StateDelayMs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (HasFoodStatic) {
        output.WriteRawTag(24);
        output.WriteInt32(FoodStatic);
      }
      if (HasStateDelayMs) {
        output.WriteRawTag(40);
        output.WriteInt32(StateDelayMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasWidth) {
        output.WriteRawTag(8);
        output.WriteInt32(Width);
      }
      if (HasHeight) {
        output.WriteRawTag(16);
        output.WriteInt32(Height);
      }
      if (HasFoodStatic) {
        output.WriteRawTag(24);
        output.WriteInt32(FoodStatic);
      }
      if (HasStateDelayMs) {
        output.WriteRawTag(40);
        output.WriteInt32(StateDelayMs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasWidth) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Width);
      }
      if (HasHeight) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Height);
      }
      if (HasFoodStatic) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FoodStatic);
      }
      if (HasStateDelayMs) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateDelayMs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameConfig other) {
      if (other == null) {
        return;
      }
      if (other.HasWidth) {
        Width = other.Width;
      }
      if (other.HasHeight) {
        Height = other.Height;
      }
      if (other.HasFoodStatic) {
        FoodStatic = other.FoodStatic;
      }
      if (other.HasStateDelayMs) {
        StateDelayMs = other.StateDelayMs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            FoodStatic = input.ReadInt32();
            break;
          }
          case 40: {
            StateDelayMs = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Width = input.ReadInt32();
            break;
          }
          case 16: {
            Height = input.ReadInt32();
            break;
          }
          case 24: {
            FoodStatic = input.ReadInt32();
            break;
          }
          case 40: {
            StateDelayMs = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Игроки конкретной игры 
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GamePlayers : pb::IMessage<GamePlayers>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GamePlayers> _parser = new pb::MessageParser<GamePlayers>(() => new GamePlayers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GamePlayers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayers(GamePlayers other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GamePlayers Clone() {
      return new GamePlayers(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Snakes.GamePlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::Snakes.GamePlayer.Parser);
    private readonly pbc::RepeatedField<global::Snakes.GamePlayer> players_ = new pbc::RepeatedField<global::Snakes.GamePlayer>();
    /// <summary>
    /// Список всех игроков
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Snakes.GamePlayer> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GamePlayers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GamePlayers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GamePlayers other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Текущее состояние игрового поля 
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameState : pb::IMessage<GameState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameState> _parser = new pb::MessageParser<GameState>(() => new GameState());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameState(GameState other) : this() {
      _hasBits0 = other._hasBits0;
      stateOrder_ = other.stateOrder_;
      snakes_ = other.snakes_.Clone();
      foods_ = other.foods_.Clone();
      players_ = other.players_ != null ? other.players_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameState Clone() {
      return new GameState(this);
    }

    /// <summary>Field number for the "state_order" field.</summary>
    public const int StateOrderFieldNumber = 1;
    private readonly static int StateOrderDefaultValue = 0;

    private int stateOrder_;
    /// <summary>
    /// Порядковый номер состояния, уникален в пределах игры, монотонно возрастает
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int StateOrder {
      get { if ((_hasBits0 & 1) != 0) { return stateOrder_; } else { return StateOrderDefaultValue; } }
      set {
        _hasBits0 |= 1;
        stateOrder_ = value;
      }
    }
    /// <summary>Gets whether the "state_order" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasStateOrder {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "state_order" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStateOrder() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "snakes" field.</summary>
    public const int SnakesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Snakes.GameState.Types.Snake> _repeated_snakes_codec
        = pb::FieldCodec.ForMessage(18, global::Snakes.GameState.Types.Snake.Parser);
    private readonly pbc::RepeatedField<global::Snakes.GameState.Types.Snake> snakes_ = new pbc::RepeatedField<global::Snakes.GameState.Types.Snake>();
    /// <summary>
    /// Список змей
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Snakes.GameState.Types.Snake> Snakes {
      get { return snakes_; }
    }

    /// <summary>Field number for the "foods" field.</summary>
    public const int FoodsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Snakes.GameState.Types.Coord> _repeated_foods_codec
        = pb::FieldCodec.ForMessage(26, global::Snakes.GameState.Types.Coord.Parser);
    private readonly pbc::RepeatedField<global::Snakes.GameState.Types.Coord> foods_ = new pbc::RepeatedField<global::Snakes.GameState.Types.Coord>();
    /// <summary>
    /// Список клеток с едой
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Snakes.GameState.Types.Coord> Foods {
      get { return foods_; }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 4;
    private global::Snakes.GamePlayers players_;
    /// <summary>
    /// Актуальнейший список игроков
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GamePlayers Players {
      get { return players_; }
      set {
        players_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StateOrder != other.StateOrder) return false;
      if(!snakes_.Equals(other.snakes_)) return false;
      if(!foods_.Equals(other.foods_)) return false;
      if (!object.Equals(Players, other.Players)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasStateOrder) hash ^= StateOrder.GetHashCode();
      hash ^= snakes_.GetHashCode();
      hash ^= foods_.GetHashCode();
      if (players_ != null) hash ^= Players.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasStateOrder) {
        output.WriteRawTag(8);
        output.WriteInt32(StateOrder);
      }
      snakes_.WriteTo(output, _repeated_snakes_codec);
      foods_.WriteTo(output, _repeated_foods_codec);
      if (players_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Players);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasStateOrder) {
        output.WriteRawTag(8);
        output.WriteInt32(StateOrder);
      }
      snakes_.WriteTo(ref output, _repeated_snakes_codec);
      foods_.WriteTo(ref output, _repeated_foods_codec);
      if (players_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Players);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasStateOrder) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StateOrder);
      }
      size += snakes_.CalculateSize(_repeated_snakes_codec);
      size += foods_.CalculateSize(_repeated_foods_codec);
      if (players_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Players);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameState other) {
      if (other == null) {
        return;
      }
      if (other.HasStateOrder) {
        StateOrder = other.StateOrder;
      }
      snakes_.Add(other.snakes_);
      foods_.Add(other.foods_);
      if (other.players_ != null) {
        if (players_ == null) {
          Players = new global::Snakes.GamePlayers();
        }
        Players.MergeFrom(other.Players);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StateOrder = input.ReadInt32();
            break;
          }
          case 18: {
            snakes_.AddEntriesFrom(input, _repeated_snakes_codec);
            break;
          }
          case 26: {
            foods_.AddEntriesFrom(input, _repeated_foods_codec);
            break;
          }
          case 34: {
            if (players_ == null) {
              Players = new global::Snakes.GamePlayers();
            }
            input.ReadMessage(Players);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StateOrder = input.ReadInt32();
            break;
          }
          case 18: {
            snakes_.AddEntriesFrom(ref input, _repeated_snakes_codec);
            break;
          }
          case 26: {
            foods_.AddEntriesFrom(ref input, _repeated_foods_codec);
            break;
          }
          case 34: {
            if (players_ == null) {
              Players = new global::Snakes.GamePlayers();
            }
            input.ReadMessage(Players);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GameState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Координаты в пределах игрового поля, либо относительное смещение координат.
      /// Левая верхняя клетка поля имеет координаты (x=0, y=0).
      /// Направление смещения задаётся знаком чисел. 
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Coord : pb::IMessage<Coord>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Coord> _parser = new pb::MessageParser<Coord>(() => new Coord());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Coord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameState.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Coord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Coord(Coord other) : this() {
          _hasBits0 = other._hasBits0;
          x_ = other.x_;
          y_ = other.y_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Coord Clone() {
          return new Coord(this);
        }

        /// <summary>Field number for the "x" field.</summary>
        public const int XFieldNumber = 1;
        private readonly static int XDefaultValue = 0;

        private int x_;
        /// <summary>
        /// По горизонтальной оси, положительное направление - вправо
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int X {
          get { if ((_hasBits0 & 1) != 0) { return x_; } else { return XDefaultValue; } }
          set {
            _hasBits0 |= 1;
            x_ = value;
          }
        }
        /// <summary>Gets whether the "x" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasX {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "x" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearX() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "y" field.</summary>
        public const int YFieldNumber = 2;
        private readonly static int YDefaultValue = 0;

        private int y_;
        /// <summary>
        /// По вертикальной оси, положительное направление - вниз
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int Y {
          get { if ((_hasBits0 & 2) != 0) { return y_; } else { return YDefaultValue; } }
          set {
            _hasBits0 |= 2;
            y_ = value;
          }
        }
        /// <summary>Gets whether the "y" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasY {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "y" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearY() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Coord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Coord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (X != other.X) return false;
          if (Y != other.Y) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasX) hash ^= X.GetHashCode();
          if (HasY) hash ^= Y.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasX) {
            output.WriteRawTag(8);
            output.WriteSInt32(X);
          }
          if (HasY) {
            output.WriteRawTag(16);
            output.WriteSInt32(Y);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasX) {
            output.WriteRawTag(8);
            output.WriteSInt32(X);
          }
          if (HasY) {
            output.WriteRawTag(16);
            output.WriteSInt32(Y);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasX) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(X);
          }
          if (HasY) {
            size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Y);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Coord other) {
          if (other == null) {
            return;
          }
          if (other.HasX) {
            X = other.X;
          }
          if (other.HasY) {
            Y = other.Y;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                X = input.ReadSInt32();
                break;
              }
              case 16: {
                Y = input.ReadSInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                X = input.ReadSInt32();
                break;
              }
              case 16: {
                Y = input.ReadSInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Змея
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Snake : pb::IMessage<Snake>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Snake> _parser = new pb::MessageParser<Snake>(() => new Snake());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Snake> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameState.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Snake() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Snake(Snake other) : this() {
          _hasBits0 = other._hasBits0;
          playerId_ = other.playerId_;
          points_ = other.points_.Clone();
          state_ = other.state_;
          headDirection_ = other.headDirection_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Snake Clone() {
          return new Snake(this);
        }

        /// <summary>Field number for the "player_id" field.</summary>
        public const int PlayerIdFieldNumber = 1;
        private readonly static int PlayerIdDefaultValue = 0;

        private int playerId_;
        /// <summary>
        /// Идентификатор игрока-владельца змеи, см. GamePlayer.id
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int PlayerId {
          get { if ((_hasBits0 & 1) != 0) { return playerId_; } else { return PlayerIdDefaultValue; } }
          set {
            _hasBits0 |= 1;
            playerId_ = value;
          }
        }
        /// <summary>Gets whether the "player_id" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlayerId {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "player_id" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlayerId() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "points" field.</summary>
        public const int PointsFieldNumber = 2;
        private static readonly pb::FieldCodec<global::Snakes.GameState.Types.Coord> _repeated_points_codec
            = pb::FieldCodec.ForMessage(18, global::Snakes.GameState.Types.Coord.Parser);
        private readonly pbc::RepeatedField<global::Snakes.GameState.Types.Coord> points_ = new pbc::RepeatedField<global::Snakes.GameState.Types.Coord>();
        /// <summary>
        /// Список "ключевых" точек змеи. Первая точка хранит координаты головы змеи.
        /// Каждая следующая - смещение следующей "ключевой" точки относительно предыдущей,
        /// в частности последняя точка хранит смещение хвоста змеи относительно предыдущей "ключевой" точки. 
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Snakes.GameState.Types.Coord> Points {
          get { return points_; }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 3;
        private readonly static global::Snakes.GameState.Types.Snake.Types.SnakeState StateDefaultValue = global::Snakes.GameState.Types.Snake.Types.SnakeState.Alive;

        private global::Snakes.GameState.Types.Snake.Types.SnakeState state_;
        /// <summary>
        /// статус змеи в игре
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.GameState.Types.Snake.Types.SnakeState State {
          get { if ((_hasBits0 & 2) != 0) { return state_; } else { return StateDefaultValue; } }
          set {
            _hasBits0 |= 2;
            state_ = value;
          }
        }
        /// <summary>Gets whether the "state" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasState {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "state" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearState() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "head_direction" field.</summary>
        public const int HeadDirectionFieldNumber = 4;
        private readonly static global::Snakes.Direction HeadDirectionDefaultValue = global::Snakes.Direction.Up;

        private global::Snakes.Direction headDirection_;
        /// <summary>
        /// Направление, в котором "повёрнута" голова змейки в текущий момент
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.Direction HeadDirection {
          get { if ((_hasBits0 & 4) != 0) { return headDirection_; } else { return HeadDirectionDefaultValue; } }
          set {
            _hasBits0 |= 4;
            headDirection_ = value;
          }
        }
        /// <summary>Gets whether the "head_direction" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasHeadDirection {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "head_direction" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearHeadDirection() {
          _hasBits0 &= ~4;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Snake);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Snake other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PlayerId != other.PlayerId) return false;
          if(!points_.Equals(other.points_)) return false;
          if (State != other.State) return false;
          if (HeadDirection != other.HeadDirection) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPlayerId) hash ^= PlayerId.GetHashCode();
          hash ^= points_.GetHashCode();
          if (HasState) hash ^= State.GetHashCode();
          if (HasHeadDirection) hash ^= HeadDirection.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPlayerId) {
            output.WriteRawTag(8);
            output.WriteInt32(PlayerId);
          }
          points_.WriteTo(output, _repeated_points_codec);
          if (HasState) {
            output.WriteRawTag(24);
            output.WriteEnum((int) State);
          }
          if (HasHeadDirection) {
            output.WriteRawTag(32);
            output.WriteEnum((int) HeadDirection);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPlayerId) {
            output.WriteRawTag(8);
            output.WriteInt32(PlayerId);
          }
          points_.WriteTo(ref output, _repeated_points_codec);
          if (HasState) {
            output.WriteRawTag(24);
            output.WriteEnum((int) State);
          }
          if (HasHeadDirection) {
            output.WriteRawTag(32);
            output.WriteEnum((int) HeadDirection);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPlayerId) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
          }
          size += points_.CalculateSize(_repeated_points_codec);
          if (HasState) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          if (HasHeadDirection) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HeadDirection);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Snake other) {
          if (other == null) {
            return;
          }
          if (other.HasPlayerId) {
            PlayerId = other.PlayerId;
          }
          points_.Add(other.points_);
          if (other.HasState) {
            State = other.State;
          }
          if (other.HasHeadDirection) {
            HeadDirection = other.HeadDirection;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PlayerId = input.ReadInt32();
                break;
              }
              case 18: {
                points_.AddEntriesFrom(input, _repeated_points_codec);
                break;
              }
              case 24: {
                State = (global::Snakes.GameState.Types.Snake.Types.SnakeState) input.ReadEnum();
                break;
              }
              case 32: {
                HeadDirection = (global::Snakes.Direction) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PlayerId = input.ReadInt32();
                break;
              }
              case 18: {
                points_.AddEntriesFrom(ref input, _repeated_points_codec);
                break;
              }
              case 24: {
                State = (global::Snakes.GameState.Types.Snake.Types.SnakeState) input.ReadEnum();
                break;
              }
              case 32: {
                HeadDirection = (global::Snakes.Direction) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Snake message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          /// <summary>
          /// Статус змеи в игре
          /// </summary>
          public enum SnakeState {
            /// <summary>
            /// Змея управляется игроком
            /// </summary>
            [pbr::OriginalName("ALIVE")] Alive = 0,
            /// <summary>
            /// Змея принадлежала игроку, который вышел из игры, она продолжает движение куда глаза глядят
            /// </summary>
            [pbr::OriginalName("ZOMBIE")] Zombie = 1,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameAnnouncement : pb::IMessage<GameAnnouncement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameAnnouncement> _parser = new pb::MessageParser<GameAnnouncement>(() => new GameAnnouncement());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameAnnouncement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAnnouncement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAnnouncement(GameAnnouncement other) : this() {
      _hasBits0 = other._hasBits0;
      players_ = other.players_ != null ? other.players_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      canJoin_ = other.canJoin_;
      gameName_ = other.gameName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameAnnouncement Clone() {
      return new GameAnnouncement(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 1;
    private global::Snakes.GamePlayers players_;
    /// <summary>
    /// Текущие игроки
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GamePlayers Players {
      get { return players_; }
      set {
        players_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Snakes.GameConfig config_;
    /// <summary>
    /// Параметры игры
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "can_join" field.</summary>
    public const int CanJoinFieldNumber = 3;
    private readonly static bool CanJoinDefaultValue = true;

    private bool canJoin_;
    /// <summary>
    /// Можно ли новому игроку присоединиться к игре (есть ли место на поле)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CanJoin {
      get { if ((_hasBits0 & 1) != 0) { return canJoin_; } else { return CanJoinDefaultValue; } }
      set {
        _hasBits0 |= 1;
        canJoin_ = value;
      }
    }
    /// <summary>Gets whether the "can_join" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasCanJoin {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "can_join" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCanJoin() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "game_name" field.</summary>
    public const int GameNameFieldNumber = 4;
    private readonly static string GameNameDefaultValue = "";

    private string gameName_;
    /// <summary>
    /// Глобально уникальное имя игры, например "my game"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string GameName {
      get { return gameName_ ?? GameNameDefaultValue; }
      set {
        gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "game_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasGameName {
      get { return gameName_ != null; }
    }
    /// <summary>Clears the value of the "game_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearGameName() {
      gameName_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameAnnouncement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameAnnouncement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Players, other.Players)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (CanJoin != other.CanJoin) return false;
      if (GameName != other.GameName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (players_ != null) hash ^= Players.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (HasCanJoin) hash ^= CanJoin.GetHashCode();
      if (HasGameName) hash ^= GameName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (players_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Players);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCanJoin) {
        output.WriteRawTag(24);
        output.WriteBool(CanJoin);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (players_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Players);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (HasCanJoin) {
        output.WriteRawTag(24);
        output.WriteBool(CanJoin);
      }
      if (HasGameName) {
        output.WriteRawTag(34);
        output.WriteString(GameName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (players_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Players);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasCanJoin) {
        size += 1 + 1;
      }
      if (HasGameName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameAnnouncement other) {
      if (other == null) {
        return;
      }
      if (other.players_ != null) {
        if (players_ == null) {
          Players = new global::Snakes.GamePlayers();
        }
        Players.MergeFrom(other.Players);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Snakes.GameConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.HasCanJoin) {
        CanJoin = other.CanJoin;
      }
      if (other.HasGameName) {
        GameName = other.GameName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (players_ == null) {
              Players = new global::Snakes.GamePlayers();
            }
            input.ReadMessage(Players);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Snakes.GameConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            CanJoin = input.ReadBool();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (players_ == null) {
              Players = new global::Snakes.GamePlayers();
            }
            input.ReadMessage(Players);
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Snakes.GameConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 24: {
            CanJoin = input.ReadBool();
            break;
          }
          case 34: {
            GameName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Общий формат любого UDP-сообщения
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GameMessage : pb::IMessage<GameMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Snakes.SnakesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMessage(GameMessage other) : this() {
      _hasBits0 = other._hasBits0;
      msgSeq_ = other.msgSeq_;
      senderId_ = other.senderId_;
      receiverId_ = other.receiverId_;
      switch (other.TypeCase) {
        case TypeOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case TypeOneofCase.Steer:
          Steer = other.Steer.Clone();
          break;
        case TypeOneofCase.Ack:
          Ack = other.Ack.Clone();
          break;
        case TypeOneofCase.State:
          State = other.State.Clone();
          break;
        case TypeOneofCase.Announcement:
          Announcement = other.Announcement.Clone();
          break;
        case TypeOneofCase.Join:
          Join = other.Join.Clone();
          break;
        case TypeOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case TypeOneofCase.RoleChange:
          RoleChange = other.RoleChange.Clone();
          break;
        case TypeOneofCase.Discover:
          Discover = other.Discover.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameMessage Clone() {
      return new GameMessage(this);
    }

    /// <summary>Field number for the "msg_seq" field.</summary>
    public const int MsgSeqFieldNumber = 1;
    private readonly static long MsgSeqDefaultValue = 0L;

    private long msgSeq_;
    /// <summary>
    /// Порядковый номер сообщения, уникален для отправителя в пределах игры, монотонно возрастает
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MsgSeq {
      get { if ((_hasBits0 & 1) != 0) { return msgSeq_; } else { return MsgSeqDefaultValue; } }
      set {
        _hasBits0 |= 1;
        msgSeq_ = value;
      }
    }
    /// <summary>Gets whether the "msg_seq" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMsgSeq {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "msg_seq" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMsgSeq() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sender_id" field.</summary>
    public const int SenderIdFieldNumber = 10;
    private readonly static int SenderIdDefaultValue = 0;

    private int senderId_;
    /// <summary>
    /// ID игрока-отправителя этого сообщения (обязательно для AckMsg и RoleChangeMsg)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SenderId {
      get { if ((_hasBits0 & 2) != 0) { return senderId_; } else { return SenderIdDefaultValue; } }
      set {
        _hasBits0 |= 2;
        senderId_ = value;
      }
    }
    /// <summary>Gets whether the "sender_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSenderId {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sender_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSenderId() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "receiver_id" field.</summary>
    public const int ReceiverIdFieldNumber = 11;
    private readonly static int ReceiverIdDefaultValue = 0;

    private int receiverId_;
    /// <summary>
    /// ID игрока-получателя этого сообщения (обязательно для AckMsg и RoleChangeMsg)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ReceiverId {
      get { if ((_hasBits0 & 4) != 0) { return receiverId_; } else { return ReceiverIdDefaultValue; } }
      set {
        _hasBits0 |= 4;
        receiverId_ = value;
      }
    }
    /// <summary>Gets whether the "receiver_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasReceiverId {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "receiver_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearReceiverId() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.PingMsg Ping {
      get { return typeCase_ == TypeOneofCase.Ping ? (global::Snakes.GameMessage.Types.PingMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "steer" field.</summary>
    public const int SteerFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.SteerMsg Steer {
      get { return typeCase_ == TypeOneofCase.Steer ? (global::Snakes.GameMessage.Types.SteerMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Steer;
      }
    }

    /// <summary>Field number for the "ack" field.</summary>
    public const int AckFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.AckMsg Ack {
      get { return typeCase_ == TypeOneofCase.Ack ? (global::Snakes.GameMessage.Types.AckMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Ack;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.StateMsg State {
      get { return typeCase_ == TypeOneofCase.State ? (global::Snakes.GameMessage.Types.StateMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.State;
      }
    }

    /// <summary>Field number for the "announcement" field.</summary>
    public const int AnnouncementFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.AnnouncementMsg Announcement {
      get { return typeCase_ == TypeOneofCase.Announcement ? (global::Snakes.GameMessage.Types.AnnouncementMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Announcement;
      }
    }

    /// <summary>Field number for the "join" field.</summary>
    public const int JoinFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.JoinMsg Join {
      get { return typeCase_ == TypeOneofCase.Join ? (global::Snakes.GameMessage.Types.JoinMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Join;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.ErrorMsg Error {
      get { return typeCase_ == TypeOneofCase.Error ? (global::Snakes.GameMessage.Types.ErrorMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Error;
      }
    }

    /// <summary>Field number for the "role_change" field.</summary>
    public const int RoleChangeFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.RoleChangeMsg RoleChange {
      get { return typeCase_ == TypeOneofCase.RoleChange ? (global::Snakes.GameMessage.Types.RoleChangeMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.RoleChange;
      }
    }

    /// <summary>Field number for the "discover" field.</summary>
    public const int DiscoverFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Snakes.GameMessage.Types.DiscoverMsg Discover {
      get { return typeCase_ == TypeOneofCase.Discover ? (global::Snakes.GameMessage.Types.DiscoverMsg) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Discover;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "Type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      Ping = 2,
      Steer = 3,
      Ack = 4,
      State = 5,
      Announcement = 6,
      Join = 7,
      Error = 8,
      RoleChange = 9,
      Discover = 12,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MsgSeq != other.MsgSeq) return false;
      if (SenderId != other.SenderId) return false;
      if (ReceiverId != other.ReceiverId) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Steer, other.Steer)) return false;
      if (!object.Equals(Ack, other.Ack)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Announcement, other.Announcement)) return false;
      if (!object.Equals(Join, other.Join)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(RoleChange, other.RoleChange)) return false;
      if (!object.Equals(Discover, other.Discover)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasMsgSeq) hash ^= MsgSeq.GetHashCode();
      if (HasSenderId) hash ^= SenderId.GetHashCode();
      if (HasReceiverId) hash ^= ReceiverId.GetHashCode();
      if (typeCase_ == TypeOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (typeCase_ == TypeOneofCase.Steer) hash ^= Steer.GetHashCode();
      if (typeCase_ == TypeOneofCase.Ack) hash ^= Ack.GetHashCode();
      if (typeCase_ == TypeOneofCase.State) hash ^= State.GetHashCode();
      if (typeCase_ == TypeOneofCase.Announcement) hash ^= Announcement.GetHashCode();
      if (typeCase_ == TypeOneofCase.Join) hash ^= Join.GetHashCode();
      if (typeCase_ == TypeOneofCase.Error) hash ^= Error.GetHashCode();
      if (typeCase_ == TypeOneofCase.RoleChange) hash ^= RoleChange.GetHashCode();
      if (typeCase_ == TypeOneofCase.Discover) hash ^= Discover.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasMsgSeq) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgSeq);
      }
      if (typeCase_ == TypeOneofCase.Ping) {
        output.WriteRawTag(18);
        output.WriteMessage(Ping);
      }
      if (typeCase_ == TypeOneofCase.Steer) {
        output.WriteRawTag(26);
        output.WriteMessage(Steer);
      }
      if (typeCase_ == TypeOneofCase.Ack) {
        output.WriteRawTag(34);
        output.WriteMessage(Ack);
      }
      if (typeCase_ == TypeOneofCase.State) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (typeCase_ == TypeOneofCase.Announcement) {
        output.WriteRawTag(50);
        output.WriteMessage(Announcement);
      }
      if (typeCase_ == TypeOneofCase.Join) {
        output.WriteRawTag(58);
        output.WriteMessage(Join);
      }
      if (typeCase_ == TypeOneofCase.Error) {
        output.WriteRawTag(66);
        output.WriteMessage(Error);
      }
      if (typeCase_ == TypeOneofCase.RoleChange) {
        output.WriteRawTag(74);
        output.WriteMessage(RoleChange);
      }
      if (HasSenderId) {
        output.WriteRawTag(80);
        output.WriteInt32(SenderId);
      }
      if (HasReceiverId) {
        output.WriteRawTag(88);
        output.WriteInt32(ReceiverId);
      }
      if (typeCase_ == TypeOneofCase.Discover) {
        output.WriteRawTag(98);
        output.WriteMessage(Discover);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasMsgSeq) {
        output.WriteRawTag(8);
        output.WriteInt64(MsgSeq);
      }
      if (typeCase_ == TypeOneofCase.Ping) {
        output.WriteRawTag(18);
        output.WriteMessage(Ping);
      }
      if (typeCase_ == TypeOneofCase.Steer) {
        output.WriteRawTag(26);
        output.WriteMessage(Steer);
      }
      if (typeCase_ == TypeOneofCase.Ack) {
        output.WriteRawTag(34);
        output.WriteMessage(Ack);
      }
      if (typeCase_ == TypeOneofCase.State) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (typeCase_ == TypeOneofCase.Announcement) {
        output.WriteRawTag(50);
        output.WriteMessage(Announcement);
      }
      if (typeCase_ == TypeOneofCase.Join) {
        output.WriteRawTag(58);
        output.WriteMessage(Join);
      }
      if (typeCase_ == TypeOneofCase.Error) {
        output.WriteRawTag(66);
        output.WriteMessage(Error);
      }
      if (typeCase_ == TypeOneofCase.RoleChange) {
        output.WriteRawTag(74);
        output.WriteMessage(RoleChange);
      }
      if (HasSenderId) {
        output.WriteRawTag(80);
        output.WriteInt32(SenderId);
      }
      if (HasReceiverId) {
        output.WriteRawTag(88);
        output.WriteInt32(ReceiverId);
      }
      if (typeCase_ == TypeOneofCase.Discover) {
        output.WriteRawTag(98);
        output.WriteMessage(Discover);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasMsgSeq) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MsgSeq);
      }
      if (HasSenderId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SenderId);
      }
      if (HasReceiverId) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReceiverId);
      }
      if (typeCase_ == TypeOneofCase.Ping) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (typeCase_ == TypeOneofCase.Steer) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Steer);
      }
      if (typeCase_ == TypeOneofCase.Ack) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ack);
      }
      if (typeCase_ == TypeOneofCase.State) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (typeCase_ == TypeOneofCase.Announcement) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Announcement);
      }
      if (typeCase_ == TypeOneofCase.Join) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Join);
      }
      if (typeCase_ == TypeOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (typeCase_ == TypeOneofCase.RoleChange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoleChange);
      }
      if (typeCase_ == TypeOneofCase.Discover) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Discover);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameMessage other) {
      if (other == null) {
        return;
      }
      if (other.HasMsgSeq) {
        MsgSeq = other.MsgSeq;
      }
      if (other.HasSenderId) {
        SenderId = other.SenderId;
      }
      if (other.HasReceiverId) {
        ReceiverId = other.ReceiverId;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Snakes.GameMessage.Types.PingMsg();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case TypeOneofCase.Steer:
          if (Steer == null) {
            Steer = new global::Snakes.GameMessage.Types.SteerMsg();
          }
          Steer.MergeFrom(other.Steer);
          break;
        case TypeOneofCase.Ack:
          if (Ack == null) {
            Ack = new global::Snakes.GameMessage.Types.AckMsg();
          }
          Ack.MergeFrom(other.Ack);
          break;
        case TypeOneofCase.State:
          if (State == null) {
            State = new global::Snakes.GameMessage.Types.StateMsg();
          }
          State.MergeFrom(other.State);
          break;
        case TypeOneofCase.Announcement:
          if (Announcement == null) {
            Announcement = new global::Snakes.GameMessage.Types.AnnouncementMsg();
          }
          Announcement.MergeFrom(other.Announcement);
          break;
        case TypeOneofCase.Join:
          if (Join == null) {
            Join = new global::Snakes.GameMessage.Types.JoinMsg();
          }
          Join.MergeFrom(other.Join);
          break;
        case TypeOneofCase.Error:
          if (Error == null) {
            Error = new global::Snakes.GameMessage.Types.ErrorMsg();
          }
          Error.MergeFrom(other.Error);
          break;
        case TypeOneofCase.RoleChange:
          if (RoleChange == null) {
            RoleChange = new global::Snakes.GameMessage.Types.RoleChangeMsg();
          }
          RoleChange.MergeFrom(other.RoleChange);
          break;
        case TypeOneofCase.Discover:
          if (Discover == null) {
            Discover = new global::Snakes.GameMessage.Types.DiscoverMsg();
          }
          Discover.MergeFrom(other.Discover);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MsgSeq = input.ReadInt64();
            break;
          }
          case 18: {
            global::Snakes.GameMessage.Types.PingMsg subBuilder = new global::Snakes.GameMessage.Types.PingMsg();
            if (typeCase_ == TypeOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 26: {
            global::Snakes.GameMessage.Types.SteerMsg subBuilder = new global::Snakes.GameMessage.Types.SteerMsg();
            if (typeCase_ == TypeOneofCase.Steer) {
              subBuilder.MergeFrom(Steer);
            }
            input.ReadMessage(subBuilder);
            Steer = subBuilder;
            break;
          }
          case 34: {
            global::Snakes.GameMessage.Types.AckMsg subBuilder = new global::Snakes.GameMessage.Types.AckMsg();
            if (typeCase_ == TypeOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
          case 42: {
            global::Snakes.GameMessage.Types.StateMsg subBuilder = new global::Snakes.GameMessage.Types.StateMsg();
            if (typeCase_ == TypeOneofCase.State) {
              subBuilder.MergeFrom(State);
            }
            input.ReadMessage(subBuilder);
            State = subBuilder;
            break;
          }
          case 50: {
            global::Snakes.GameMessage.Types.AnnouncementMsg subBuilder = new global::Snakes.GameMessage.Types.AnnouncementMsg();
            if (typeCase_ == TypeOneofCase.Announcement) {
              subBuilder.MergeFrom(Announcement);
            }
            input.ReadMessage(subBuilder);
            Announcement = subBuilder;
            break;
          }
          case 58: {
            global::Snakes.GameMessage.Types.JoinMsg subBuilder = new global::Snakes.GameMessage.Types.JoinMsg();
            if (typeCase_ == TypeOneofCase.Join) {
              subBuilder.MergeFrom(Join);
            }
            input.ReadMessage(subBuilder);
            Join = subBuilder;
            break;
          }
          case 66: {
            global::Snakes.GameMessage.Types.ErrorMsg subBuilder = new global::Snakes.GameMessage.Types.ErrorMsg();
            if (typeCase_ == TypeOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 74: {
            global::Snakes.GameMessage.Types.RoleChangeMsg subBuilder = new global::Snakes.GameMessage.Types.RoleChangeMsg();
            if (typeCase_ == TypeOneofCase.RoleChange) {
              subBuilder.MergeFrom(RoleChange);
            }
            input.ReadMessage(subBuilder);
            RoleChange = subBuilder;
            break;
          }
          case 80: {
            SenderId = input.ReadInt32();
            break;
          }
          case 88: {
            ReceiverId = input.ReadInt32();
            break;
          }
          case 98: {
            global::Snakes.GameMessage.Types.DiscoverMsg subBuilder = new global::Snakes.GameMessage.Types.DiscoverMsg();
            if (typeCase_ == TypeOneofCase.Discover) {
              subBuilder.MergeFrom(Discover);
            }
            input.ReadMessage(subBuilder);
            Discover = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MsgSeq = input.ReadInt64();
            break;
          }
          case 18: {
            global::Snakes.GameMessage.Types.PingMsg subBuilder = new global::Snakes.GameMessage.Types.PingMsg();
            if (typeCase_ == TypeOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 26: {
            global::Snakes.GameMessage.Types.SteerMsg subBuilder = new global::Snakes.GameMessage.Types.SteerMsg();
            if (typeCase_ == TypeOneofCase.Steer) {
              subBuilder.MergeFrom(Steer);
            }
            input.ReadMessage(subBuilder);
            Steer = subBuilder;
            break;
          }
          case 34: {
            global::Snakes.GameMessage.Types.AckMsg subBuilder = new global::Snakes.GameMessage.Types.AckMsg();
            if (typeCase_ == TypeOneofCase.Ack) {
              subBuilder.MergeFrom(Ack);
            }
            input.ReadMessage(subBuilder);
            Ack = subBuilder;
            break;
          }
          case 42: {
            global::Snakes.GameMessage.Types.StateMsg subBuilder = new global::Snakes.GameMessage.Types.StateMsg();
            if (typeCase_ == TypeOneofCase.State) {
              subBuilder.MergeFrom(State);
            }
            input.ReadMessage(subBuilder);
            State = subBuilder;
            break;
          }
          case 50: {
            global::Snakes.GameMessage.Types.AnnouncementMsg subBuilder = new global::Snakes.GameMessage.Types.AnnouncementMsg();
            if (typeCase_ == TypeOneofCase.Announcement) {
              subBuilder.MergeFrom(Announcement);
            }
            input.ReadMessage(subBuilder);
            Announcement = subBuilder;
            break;
          }
          case 58: {
            global::Snakes.GameMessage.Types.JoinMsg subBuilder = new global::Snakes.GameMessage.Types.JoinMsg();
            if (typeCase_ == TypeOneofCase.Join) {
              subBuilder.MergeFrom(Join);
            }
            input.ReadMessage(subBuilder);
            Join = subBuilder;
            break;
          }
          case 66: {
            global::Snakes.GameMessage.Types.ErrorMsg subBuilder = new global::Snakes.GameMessage.Types.ErrorMsg();
            if (typeCase_ == TypeOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 74: {
            global::Snakes.GameMessage.Types.RoleChangeMsg subBuilder = new global::Snakes.GameMessage.Types.RoleChangeMsg();
            if (typeCase_ == TypeOneofCase.RoleChange) {
              subBuilder.MergeFrom(RoleChange);
            }
            input.ReadMessage(subBuilder);
            RoleChange = subBuilder;
            break;
          }
          case 80: {
            SenderId = input.ReadInt32();
            break;
          }
          case 88: {
            ReceiverId = input.ReadInt32();
            break;
          }
          case 98: {
            global::Snakes.GameMessage.Types.DiscoverMsg subBuilder = new global::Snakes.GameMessage.Types.DiscoverMsg();
            if (typeCase_ == TypeOneofCase.Discover) {
              subBuilder.MergeFrom(Discover);
            }
            input.ReadMessage(subBuilder);
            Discover = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GameMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Ничего не меняем, просто говорим, что мы живы
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class PingMsg : pb::IMessage<PingMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PingMsg> _parser = new pb::MessageParser<PingMsg>(() => new PingMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PingMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PingMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PingMsg(PingMsg other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PingMsg Clone() {
          return new PingMsg(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PingMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PingMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PingMsg other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Не-центральный игрок просит повернуть голову змеи
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class SteerMsg : pb::IMessage<SteerMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SteerMsg> _parser = new pb::MessageParser<SteerMsg>(() => new SteerMsg());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<SteerMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SteerMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SteerMsg(SteerMsg other) : this() {
          _hasBits0 = other._hasBits0;
          direction_ = other.direction_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public SteerMsg Clone() {
          return new SteerMsg(this);
        }

        /// <summary>Field number for the "direction" field.</summary>
        public const int DirectionFieldNumber = 1;
        private readonly static global::Snakes.Direction DirectionDefaultValue = global::Snakes.Direction.Up;

        private global::Snakes.Direction direction_;
        /// <summary>
        /// Куда повернуть на следующем шаге
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.Direction Direction {
          get { if ((_hasBits0 & 1) != 0) { return direction_; } else { return DirectionDefaultValue; } }
          set {
            _hasBits0 |= 1;
            direction_ = value;
          }
        }
        /// <summary>Gets whether the "direction" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDirection {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "direction" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDirection() {
          _hasBits0 &= ~1;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as SteerMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(SteerMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Direction != other.Direction) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasDirection) hash ^= Direction.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasDirection) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Direction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasDirection) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Direction);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasDirection) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(SteerMsg other) {
          if (other == null) {
            return;
          }
          if (other.HasDirection) {
            Direction = other.Direction;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Direction = (global::Snakes.Direction) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Direction = (global::Snakes.Direction) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Подтверждение сообщения с таким же seq
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AckMsg : pb::IMessage<AckMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AckMsg> _parser = new pb::MessageParser<AckMsg>(() => new AckMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AckMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AckMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AckMsg(AckMsg other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AckMsg Clone() {
          return new AckMsg(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AckMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AckMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AckMsg other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Центральный узел сообщает остальным игрокам состояние игры
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class StateMsg : pb::IMessage<StateMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StateMsg> _parser = new pb::MessageParser<StateMsg>(() => new StateMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<StateMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StateMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StateMsg(StateMsg other) : this() {
          state_ = other.state_ != null ? other.state_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StateMsg Clone() {
          return new StateMsg(this);
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 1;
        private global::Snakes.GameState state_;
        /// <summary>
        /// Состояние игрового поля
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.GameState State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as StateMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(StateMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(State, other.State)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (state_ != null) hash ^= State.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (state_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(State);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (state_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(State);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (state_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(StateMsg other) {
          if (other == null) {
            return;
          }
          if (other.state_ != null) {
            if (state_ == null) {
              State = new global::Snakes.GameState();
            }
            State.MergeFrom(other.State);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (state_ == null) {
                  State = new global::Snakes.GameState();
                }
                input.ReadMessage(State);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (state_ == null) {
                  State = new global::Snakes.GameState();
                }
                input.ReadMessage(State);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Уведомление об идущих играх, регулярно отправляется multicast-ом или в ответ на DiscoverMsg
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class AnnouncementMsg : pb::IMessage<AnnouncementMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<AnnouncementMsg> _parser = new pb::MessageParser<AnnouncementMsg>(() => new AnnouncementMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<AnnouncementMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnnouncementMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnnouncementMsg(AnnouncementMsg other) : this() {
          games_ = other.games_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public AnnouncementMsg Clone() {
          return new AnnouncementMsg(this);
        }

        /// <summary>Field number for the "games" field.</summary>
        public const int GamesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Snakes.GameAnnouncement> _repeated_games_codec
            = pb::FieldCodec.ForMessage(10, global::Snakes.GameAnnouncement.Parser);
        private readonly pbc::RepeatedField<global::Snakes.GameAnnouncement> games_ = new pbc::RepeatedField<global::Snakes.GameAnnouncement>();
        /// <summary>
        /// Идущие игры (в текущей версии задачи тут всегда ровно одна игра)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public pbc::RepeatedField<global::Snakes.GameAnnouncement> Games {
          get { return games_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as AnnouncementMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(AnnouncementMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!games_.Equals(other.games_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= games_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          games_.WriteTo(output, _repeated_games_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          games_.WriteTo(ref output, _repeated_games_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          size += games_.CalculateSize(_repeated_games_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(AnnouncementMsg other) {
          if (other == null) {
            return;
          }
          games_.Add(other.games_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                games_.AddEntriesFrom(input, _repeated_games_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                games_.AddEntriesFrom(ref input, _repeated_games_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Запрос информации об идущих играх
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class DiscoverMsg : pb::IMessage<DiscoverMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<DiscoverMsg> _parser = new pb::MessageParser<DiscoverMsg>(() => new DiscoverMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<DiscoverMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DiscoverMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DiscoverMsg(DiscoverMsg other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public DiscoverMsg Clone() {
          return new DiscoverMsg(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as DiscoverMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(DiscoverMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(DiscoverMsg other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Новый игрок хочет присоединиться к идущей игре
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class JoinMsg : pb::IMessage<JoinMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<JoinMsg> _parser = new pb::MessageParser<JoinMsg>(() => new JoinMsg());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<JoinMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JoinMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JoinMsg(JoinMsg other) : this() {
          _hasBits0 = other._hasBits0;
          playerType_ = other.playerType_;
          playerName_ = other.playerName_;
          gameName_ = other.gameName_;
          requestedRole_ = other.requestedRole_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public JoinMsg Clone() {
          return new JoinMsg(this);
        }

        /// <summary>Field number for the "player_type" field.</summary>
        public const int PlayerTypeFieldNumber = 1;
        private readonly static global::Snakes.PlayerType PlayerTypeDefaultValue = global::Snakes.PlayerType.Human;

        private global::Snakes.PlayerType playerType_;
        /// <summary>
        /// Тип присоединяющегося игрока
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.PlayerType PlayerType {
          get { if ((_hasBits0 & 1) != 0) { return playerType_; } else { return PlayerTypeDefaultValue; } }
          set {
            _hasBits0 |= 1;
            playerType_ = value;
          }
        }
        /// <summary>Gets whether the "player_type" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlayerType {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "player_type" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlayerType() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "player_name" field.</summary>
        public const int PlayerNameFieldNumber = 3;
        private readonly static string PlayerNameDefaultValue = "";

        private string playerName_;
        /// <summary>
        /// Имя игрока
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string PlayerName {
          get { return playerName_ ?? PlayerNameDefaultValue; }
          set {
            playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "player_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasPlayerName {
          get { return playerName_ != null; }
        }
        /// <summary>Clears the value of the "player_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearPlayerName() {
          playerName_ = null;
        }

        /// <summary>Field number for the "game_name" field.</summary>
        public const int GameNameFieldNumber = 4;
        private readonly static string GameNameDefaultValue = "";

        private string gameName_;
        /// <summary>
        /// Глобально уникальное имя игры, к которой хотим присоединиться
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string GameName {
          get { return gameName_ ?? GameNameDefaultValue; }
          set {
            gameName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "game_name" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasGameName {
          get { return gameName_ != null; }
        }
        /// <summary>Clears the value of the "game_name" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearGameName() {
          gameName_ = null;
        }

        /// <summary>Field number for the "requested_role" field.</summary>
        public const int RequestedRoleFieldNumber = 5;
        private readonly static global::Snakes.NodeRole RequestedRoleDefaultValue = global::Snakes.NodeRole.Normal;

        private global::Snakes.NodeRole requestedRole_;
        /// <summary>
        /// NORMAL, если хотим играть; VIEWER, если хотим только понаблюдать; остальные значения недопустимы
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.NodeRole RequestedRole {
          get { if ((_hasBits0 & 2) != 0) { return requestedRole_; } else { return RequestedRoleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            requestedRole_ = value;
          }
        }
        /// <summary>Gets whether the "requested_role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRequestedRole {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "requested_role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRequestedRole() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as JoinMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(JoinMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (PlayerType != other.PlayerType) return false;
          if (PlayerName != other.PlayerName) return false;
          if (GameName != other.GameName) return false;
          if (RequestedRole != other.RequestedRole) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasPlayerType) hash ^= PlayerType.GetHashCode();
          if (HasPlayerName) hash ^= PlayerName.GetHashCode();
          if (HasGameName) hash ^= GameName.GetHashCode();
          if (HasRequestedRole) hash ^= RequestedRole.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasPlayerType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PlayerType);
          }
          if (HasPlayerName) {
            output.WriteRawTag(26);
            output.WriteString(PlayerName);
          }
          if (HasGameName) {
            output.WriteRawTag(34);
            output.WriteString(GameName);
          }
          if (HasRequestedRole) {
            output.WriteRawTag(40);
            output.WriteEnum((int) RequestedRole);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasPlayerType) {
            output.WriteRawTag(8);
            output.WriteEnum((int) PlayerType);
          }
          if (HasPlayerName) {
            output.WriteRawTag(26);
            output.WriteString(PlayerName);
          }
          if (HasGameName) {
            output.WriteRawTag(34);
            output.WriteString(GameName);
          }
          if (HasRequestedRole) {
            output.WriteRawTag(40);
            output.WriteEnum((int) RequestedRole);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasPlayerType) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerType);
          }
          if (HasPlayerName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
          }
          if (HasGameName) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(GameName);
          }
          if (HasRequestedRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RequestedRole);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(JoinMsg other) {
          if (other == null) {
            return;
          }
          if (other.HasPlayerType) {
            PlayerType = other.PlayerType;
          }
          if (other.HasPlayerName) {
            PlayerName = other.PlayerName;
          }
          if (other.HasGameName) {
            GameName = other.GameName;
          }
          if (other.HasRequestedRole) {
            RequestedRole = other.RequestedRole;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                PlayerType = (global::Snakes.PlayerType) input.ReadEnum();
                break;
              }
              case 26: {
                PlayerName = input.ReadString();
                break;
              }
              case 34: {
                GameName = input.ReadString();
                break;
              }
              case 40: {
                RequestedRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                PlayerType = (global::Snakes.PlayerType) input.ReadEnum();
                break;
              }
              case 26: {
                PlayerName = input.ReadString();
                break;
              }
              case 34: {
                GameName = input.ReadString();
                break;
              }
              case 40: {
                RequestedRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Ошибка операции (например отказ в присоединении к игре, т.к. нет места на поле)
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class ErrorMsg : pb::IMessage<ErrorMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ErrorMsg> _parser = new pb::MessageParser<ErrorMsg>(() => new ErrorMsg());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<ErrorMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorMsg(ErrorMsg other) : this() {
          errorMessage_ = other.errorMessage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ErrorMsg Clone() {
          return new ErrorMsg(this);
        }

        /// <summary>Field number for the "error_message" field.</summary>
        public const int ErrorMessageFieldNumber = 1;
        private readonly static string ErrorMessageDefaultValue = "";

        private string errorMessage_;
        /// <summary>
        /// Строковое сообщение, нужно отобразить его на экране, не блокируя работу программы
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public string ErrorMessage {
          get { return errorMessage_ ?? ErrorMessageDefaultValue; }
          set {
            errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }
        /// <summary>Gets whether the "error_message" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasErrorMessage {
          get { return errorMessage_ != null; }
        }
        /// <summary>Clears the value of the "error_message" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearErrorMessage() {
          errorMessage_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as ErrorMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(ErrorMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (ErrorMessage != other.ErrorMessage) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasErrorMessage) hash ^= ErrorMessage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasErrorMessage) {
            output.WriteRawTag(10);
            output.WriteString(ErrorMessage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasErrorMessage) {
            output.WriteRawTag(10);
            output.WriteString(ErrorMessage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasErrorMessage) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(ErrorMsg other) {
          if (other == null) {
            return;
          }
          if (other.HasErrorMessage) {
            ErrorMessage = other.ErrorMessage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                ErrorMessage = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                ErrorMessage = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Сообщение о смене роли:
      /// 1. от заместителя другим игрокам о том, что пора начинать считать его главным (sender_role = MASTER)
      /// 2. от осознанно выходящего игрока (sender_role = VIEWER)
      /// 3. от главного к умершему игроку (receiver_role = VIEWER)
      /// 4. в комбинации с 1,2 или отдельно от них: назначение кого-то заместителем (receiver_role = DEPUTY)
      /// 5. в комбинации с 2 от главного узла заместителю о том, что он становится главным (receiver_role = MASTER)
      /// </summary>
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class RoleChangeMsg : pb::IMessage<RoleChangeMsg>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RoleChangeMsg> _parser = new pb::MessageParser<RoleChangeMsg>(() => new RoleChangeMsg());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RoleChangeMsg> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Snakes.GameMessage.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RoleChangeMsg() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RoleChangeMsg(RoleChangeMsg other) : this() {
          _hasBits0 = other._hasBits0;
          senderRole_ = other.senderRole_;
          receiverRole_ = other.receiverRole_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RoleChangeMsg Clone() {
          return new RoleChangeMsg(this);
        }

        /// <summary>Field number for the "sender_role" field.</summary>
        public const int SenderRoleFieldNumber = 1;
        private readonly static global::Snakes.NodeRole SenderRoleDefaultValue = global::Snakes.NodeRole.Normal;

        private global::Snakes.NodeRole senderRole_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.NodeRole SenderRole {
          get { if ((_hasBits0 & 1) != 0) { return senderRole_; } else { return SenderRoleDefaultValue; } }
          set {
            _hasBits0 |= 1;
            senderRole_ = value;
          }
        }
        /// <summary>Gets whether the "sender_role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSenderRole {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "sender_role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSenderRole() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "receiver_role" field.</summary>
        public const int ReceiverRoleFieldNumber = 2;
        private readonly static global::Snakes.NodeRole ReceiverRoleDefaultValue = global::Snakes.NodeRole.Normal;

        private global::Snakes.NodeRole receiverRole_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Snakes.NodeRole ReceiverRole {
          get { if ((_hasBits0 & 2) != 0) { return receiverRole_; } else { return ReceiverRoleDefaultValue; } }
          set {
            _hasBits0 |= 2;
            receiverRole_ = value;
          }
        }
        /// <summary>Gets whether the "receiver_role" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasReceiverRole {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "receiver_role" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearReceiverRole() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RoleChangeMsg);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RoleChangeMsg other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (SenderRole != other.SenderRole) return false;
          if (ReceiverRole != other.ReceiverRole) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSenderRole) hash ^= SenderRole.GetHashCode();
          if (HasReceiverRole) hash ^= ReceiverRole.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSenderRole) {
            output.WriteRawTag(8);
            output.WriteEnum((int) SenderRole);
          }
          if (HasReceiverRole) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ReceiverRole);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSenderRole) {
            output.WriteRawTag(8);
            output.WriteEnum((int) SenderRole);
          }
          if (HasReceiverRole) {
            output.WriteRawTag(16);
            output.WriteEnum((int) ReceiverRole);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSenderRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SenderRole);
          }
          if (HasReceiverRole) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReceiverRole);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RoleChangeMsg other) {
          if (other == null) {
            return;
          }
          if (other.HasSenderRole) {
            SenderRole = other.SenderRole;
          }
          if (other.HasReceiverRole) {
            ReceiverRole = other.ReceiverRole;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                SenderRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
              case 16: {
                ReceiverRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                SenderRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
              case 16: {
                ReceiverRole = (global::Snakes.NodeRole) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
